class Pt(x: Int, y: Int) {
    this.x = x;
    this.y = y;

    def translate(dx: Int, dy: Int){
        this.x = this.x+dx;
        this.y = this.y+dy;
    }

    def LESS(other: Obj) : Boolean{
        typecase other {
            Point: Pt {
                (this.x - Point.x).PRINT();
                "\n".PRINT();
                (this.y - Point.y).PRINT();
                "\n".PRINT();
                return this.x < Point.x and this.y < Point.y;

                }
            obj: Obj {return false;}
        }
    }

    def EQUALS(other: Obj) : Boolean{
        typecase other {
            Point: Pt {return this.x == Point.x and this.y == Point.y;}
            obj: Obj {return false;}
        }
    }

    def STR(): String{
        return "Point: (" + this.x.STR() + " " + this.y.STR() + ")";
    }

    def foo(a: Int) {
        this.x = this.x + a;
        this.y = this.y + a;
    }

}

class Rect(ll: Pt, ur: Pt) {
    this.ll= ll;
    this.ur = ur;

    def EQUALS(other: Obj) : Boolean{
        typecase other {
            Rec: Rect {return this.ll == Rec.ll and this.ur == Rec.ur;}
            obj: Obj {return false;}
        }
    }

    def getll(): Pt {
        return this.ll;
    }

    def STR(): String{
        return "Rect: (" + this.ll.STR() + " " + this.ur.STR() + ")";
    }

}

class Square(ll: Pt, len: Int) extends Rect {
    this.ll = ll;
    this.ur = Pt(ll.x + len, ll.y + len);
}
z = Square(Pt(3,3), 5);
o = Square(Pt(3,3), 0);
o.ur.foo(5);

if z==Square(Pt(3,3), 5) {
    90.PRINT();
} else {
    "NO".PRINT();
}


